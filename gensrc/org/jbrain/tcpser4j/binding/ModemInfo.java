// autogenerated from SchemaBinder

package org.jbrain.tcpser4j.binding;

/**
 * Title: ModemInfo
 * Description: Description of the class
 * @author SchemaBinder
 * @version 1.0
 * 
 */

public class ModemInfo implements java.io.Serializable {
    private static final String sObjName="ModemInfo";
    private java.util.ArrayList _oInitialization=new java.util.ArrayList();
    private java.util.ArrayList _oEventAction=new java.util.ArrayList();
    private PhoneBook _oPhoneBook=null;
    private ModemInfo _oCaptiveModem=null;
    private String _oType=null;
    private String _oDevice=null;
    private Integer _oSpeed=null;
    private String _oParity=null;
    private Integer _oStopbits=null;
    private Boolean _oInvertDCD=null;


    public ModemInfo() {
    }

     /**
      * Title: ModemInfo
      * Description: Description of the constructor
      * 
      */

    public ModemInfo(org.dom4j.Element el) throws Exception {
        this();
        readXML(el);
    }

    public String getInitialization(int idx) {
        return (String)_oInitialization.get(idx);
    }

    public java.util.ArrayList getInitializationList() {
        return _oInitialization;
    }

    public int getInitializationSize() {
        return _oInitialization.size();
    }

    public void addInitialization(String o) {
        _oInitialization.add(o);
    }

    public void setInitialization(int idx, String o) {
        _oInitialization.add(idx,o);
    }

    public EventActionInfo getEventAction(int idx) {
        return (EventActionInfo)_oEventAction.get(idx);
    }

    public java.util.ArrayList getEventActionList() {
        return _oEventAction;
    }

    public int getEventActionSize() {
        return _oEventAction.size();
    }

    public void addEventAction(EventActionInfo o) {
        _oEventAction.add(o);
    }

    public void setEventAction(int idx, EventActionInfo o) {
        _oEventAction.add(idx,o);
    }

    public PhoneBook getPhoneBook() {
        return _oPhoneBook;
    }

    public void setPhoneBook(PhoneBook o) {
        _oPhoneBook = o;
    }

    public ModemInfo getCaptiveModem() {
        return _oCaptiveModem;
    }

    public void setCaptiveModem(ModemInfo o) {
        _oCaptiveModem = o;
    }

    public String getType() {
        return _oType;
    }

    public void setType(String o) {
        _oType = o;
    }

    public String getDevice() {
        return _oDevice;
    }

    public void setDevice(String o) {
        _oDevice = o;
    }

    public Integer getSpeed() {
        return _oSpeed;
    }

    public void setSpeed(Integer o) {
        _oSpeed = o;
    }

    public String getParity() {
        return _oParity;
    }

    public void setParity(String o) {
        _oParity = o;
    }

    public Integer getStopbits() {
        return _oStopbits;
    }

    public void setStopbits(Integer o) {
        _oStopbits = o;
    }

    public Boolean getInvertDCD() {
        return _oInvertDCD;
    }

    public void setInvertDCD(Boolean o) {
        _oInvertDCD = o;
    }


     /**
      * Title: validate
      * Description: Description of the method
      * 
      */

    public boolean validate() throws Exception {
        return true;
    }

     /**
      * Title: readXML
      * Description: Parses XML into Object instance
      * 
      */

    public void readXML(org.dom4j.Element el) throws Exception {
        String name,value;
        org.dom4j.Element node=el;

        if (el.attribute("type") != null)
                setType(el.attribute("type").getText());
        if (el.attribute("device") != null)
                setDevice(el.attribute("device").getText());
        if (el.attribute("speed") != null)
                setSpeed(org.jbrain.xml.binding._TypeConverter.parseInteger(el.attribute("speed").getText(), sObjName, "Speed"));
        if (el.attribute("parity") != null)
                setParity(el.attribute("parity").getText());
        if (el.attribute("stopbits") != null)
                setStopbits(org.jbrain.xml.binding._TypeConverter.parseInteger(el.attribute("stopbits").getText(), sObjName, "Stopbits"));
        if (el.attribute("invertDCD") != null)
                setInvertDCD(org.jbrain.xml.binding._TypeConverter.parseBoolean(el.attribute("invertDCD").getText(), sObjName, "InvertDCD"));
        java.util.Iterator i = el.elementIterator();
        while (i.hasNext()) {
            node = (org.dom4j.Element) i.next();
            name = node.getName();
            if (name.equals("Initialization"))
                addInitialization(node.getTextTrim());
            if (name.equals("EventAction"))
                addEventAction(new EventActionInfo(node));
            if (name.equals("PhoneBook"))
                setPhoneBook(new PhoneBook(node));
            if (name.equals("CaptiveModem"))
                setCaptiveModem(new ModemInfo(node));
        }
    }

     /**
      * Title: writeXML
      * Description: Creates XML from Object instance
      * 
      */

    public org.dom4j.Element writeXML() throws Exception {
        return writeXML(sObjName);
    }

     /**
      * Title: writeXML
      * Description: Creates XML from Object instance
      * 
      */

    public org.dom4j.Element writeXML(String name) throws Exception {
        org.dom4j.Element el = org.dom4j.DocumentHelper.createElement(name);

        for(int idx = 0,size = getInitializationSize();idx<size;idx++)
            el.addElement("Initialization").addText(getInitialization(idx));
        for(int idx = 0,size = getEventActionSize();idx<size;idx++)
            el.add(getEventAction(idx).writeXML("EventAction"));
        if(getPhoneBook() != null)
            el.add(getPhoneBook().writeXML("PhoneBook"));
        if(getCaptiveModem() != null)
            el.add(getCaptiveModem().writeXML("CaptiveModem"));
        if(getType() != null)
            el.addAttribute("type", getType());
        if(getDevice() != null)
            el.addAttribute("device", getDevice());
        if(getSpeed() != null)
            el.addAttribute("speed", org.jbrain.xml.binding._TypeConverter.buildInteger(getSpeed()));
        if(getParity() != null)
            el.addAttribute("parity", getParity());
        if(getStopbits() != null)
            el.addAttribute("stopbits", org.jbrain.xml.binding._TypeConverter.buildInteger(getStopbits()));
        if(getInvertDCD() != null)
            el.addAttribute("invertDCD", org.jbrain.xml.binding._TypeConverter.buildBoolean(getInvertDCD()));
        return el;
    }

}
