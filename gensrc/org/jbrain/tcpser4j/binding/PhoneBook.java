// autogenerated from SchemaBinder

package org.jbrain.tcpser4j.binding;

/**
 * Title: PhoneBook
 * Description: Description of the class
 * @author SchemaBinder
 * @version 1.0
 * 
 */

public class PhoneBook implements java.io.Serializable {
    private static final String sObjName="PhoneBook";
    private java.util.ArrayList _oEntry=new java.util.ArrayList();


    public PhoneBook() {
    }

     /**
      * Title: PhoneBook
      * Description: Description of the constructor
      * 
      */

    public PhoneBook(org.dom4j.Element el) throws Exception {
        this();
        readXML(el);
    }

    public Entry getEntry(int idx) {
        return (Entry)_oEntry.get(idx);
    }

    public java.util.ArrayList getEntryList() {
        return _oEntry;
    }

    public int getEntrySize() {
        return _oEntry.size();
    }

    public void addEntry(Entry o) {
        _oEntry.add(o);
    }

    public void setEntry(int idx, Entry o) {
        _oEntry.add(idx,o);
    }


     /**
      * Title: validate
      * Description: Description of the method
      * 
      */

    public boolean validate() throws Exception {
        return true;
    }

     /**
      * Title: readXML
      * Description: Parses XML into Object instance
      * 
      */

    public void readXML(org.dom4j.Element el) throws Exception {
        String name,value;
        org.dom4j.Element node=el;

        java.util.Iterator i = el.elementIterator();
        while (i.hasNext()) {
            node = (org.dom4j.Element) i.next();
            name = node.getName();
            if (name.equals("Entry"))
                addEntry(new Entry(node));
        }
    }

     /**
      * Title: writeXML
      * Description: Creates XML from Object instance
      * 
      */

    public org.dom4j.Element writeXML() throws Exception {
        return writeXML(sObjName);
    }

     /**
      * Title: writeXML
      * Description: Creates XML from Object instance
      * 
      */

    public org.dom4j.Element writeXML(String name) throws Exception {
        org.dom4j.Element el = org.dom4j.DocumentHelper.createElement(name);

        for(int idx = 0,size = getEntrySize();idx<size;idx++)
            el.add(getEntry(idx).writeXML("Entry"));
        return el;
    }

}
