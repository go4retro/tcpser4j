// autogenerated from SchemaBinder

package org.jbrain.tcpser4j.binding;

/**
 * Title: EventActionInfo
 * Description: Description of the class
 * @author SchemaBinder
 * @version 1.0
 * 
 */

public class EventActionInfo implements java.io.Serializable {
    private static final String sObjName="EventActionInfo";
    private String _oType=null;
    private ActionList _oAction=null;
    private DirectionList _oDirection=null;
    private String _oContent=null;
    private Integer _oIterations=null;
    private Boolean _oAsynchronous=null;


    public EventActionInfo() {
    }

     /**
      * Title: EventActionInfo
      * Description: Description of the constructor
      * 
      */

    public EventActionInfo(org.dom4j.Element el) throws Exception {
        this();
        readXML(el);
    }

    public String getType() {
        return _oType;
    }

    public void setType(String o) {
        _oType = o;
    }

    public ActionList getAction() {
        return _oAction;
    }

    public void setAction(ActionList o) {
        _oAction = o;
    }

    public DirectionList getDirection() {
        return _oDirection;
    }

    public void setDirection(DirectionList o) {
        _oDirection = o;
    }

    public String getContent() {
        return _oContent;
    }

    public void setContent(String o) {
        _oContent = o;
    }

    public Integer getIterations() {
        return _oIterations;
    }

    public void setIterations(Integer o) {
        _oIterations = o;
    }

    public Boolean getAsynchronous() {
        return _oAsynchronous;
    }

    public void setAsynchronous(Boolean o) {
        _oAsynchronous = o;
    }


     /**
      * Title: validate
      * Description: Description of the method
      * 
      */

    public boolean validate() throws Exception {
        return true;
    }

     /**
      * Title: readXML
      * Description: Parses XML into Object instance
      * 
      */

    public void readXML(org.dom4j.Element el) throws Exception {
        String name,value;
        org.dom4j.Element node=el;

        if (el.attribute("type") != null)
                setType(el.attribute("type").getText());
        if (el.attribute("action") != null)
                setAction(ActionList.valueOf(el.attribute("action").getText()));
        if (el.attribute("direction") != null)
                setDirection(DirectionList.valueOf(el.attribute("direction").getText()));
        if (el.attribute("content") != null)
                setContent(el.attribute("content").getText());
        if (el.attribute("iterations") != null)
                setIterations(org.jbrain.xml.binding._TypeConverter.parseInteger(el.attribute("iterations").getText(), sObjName, "Iterations"));
        if (el.attribute("asynchronous") != null)
                setAsynchronous(org.jbrain.xml.binding._TypeConverter.parseBoolean(el.attribute("asynchronous").getText(), sObjName, "Asynchronous"));
    }

     /**
      * Title: writeXML
      * Description: Creates XML from Object instance
      * 
      */

    public org.dom4j.Element writeXML() throws Exception {
        return writeXML(sObjName);
    }

     /**
      * Title: writeXML
      * Description: Creates XML from Object instance
      * 
      */

    public org.dom4j.Element writeXML(String name) throws Exception {
        org.dom4j.Element el = org.dom4j.DocumentHelper.createElement(name);

        if(getType() != null)
            el.addAttribute("type", getType());
        if(getAction() != null)
            el.addAttribute("action", getAction().toString());
        if(getDirection() != null)
            el.addAttribute("direction", getDirection().toString());
        if(getContent() != null)
            el.addAttribute("content", getContent());
        if(getIterations() != null)
            el.addAttribute("iterations", org.jbrain.xml.binding._TypeConverter.buildInteger(getIterations()));
        if(getAsynchronous() != null)
            el.addAttribute("asynchronous", org.jbrain.xml.binding._TypeConverter.buildBoolean(getAsynchronous()));
        return el;
    }

}
